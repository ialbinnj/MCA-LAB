mysql> use albindb;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed

mysql> delimiter //
mysql> create procedure calculate_av_salary()
    -> begin
    -> declare cur_salary int;
    -> declare total_salary integer default 0;
    -> declare num_rows integer default 0;
    -> declare avg_salary integer default 0;
    -> declare done boolean default false;
    -> declare salary_cursor cursor for select salary from employee2;
    -> declare continue handler for not found set done = true;
    -> open salary_cursor;
    -> fetch_loop: loop
    -> fetch salary_cursor into cur_salary;
    -> if done then
    -> leave fetch_loop;
    -> end if;
    -> if cur_salary is not null then
    -> set total_salary = total_salary+cur_salary;
    -> set num_rows = num_rows+1;
    -> end if;
    -> end loop fetch_loop;
    -> close salary_cursor;
    -> if num_rows>0 then
    -> set avg_salary = total_salary/num_rows;
    -> end if;
    -> select avg_salary;
    -> end //
Query OK, 0 rows affected, 3 warnings (0.44 sec)

mysql> delimiter ;
mysql> select * from employee2;
+-------------+------------+-----------+----------+
| employee_id | first_name | last_name | salary   |
+-------------+------------+-----------+----------+
|           1 | john       | doe       | 50000.00 |
|           2 | jane       | smith     | 60000.00 |
|           3 | michael    | johnson   | 55000.00 |
|           4 | Minnu      | joseph    | 65000.00 |
+-------------+------------+-----------+----------+
4 rows in set (0.00 sec)

mysql> call calculate_av_salary();
+------------+
| avg_salary |
+------------+
|      57500 |
+------------+
1 row in set (0.09 sec)

Query OK, 0 rows affected (0.09 sec)
